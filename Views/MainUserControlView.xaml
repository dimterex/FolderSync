<Window x:Class="FolderSyns.Views.MainUserControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:enums="clr-namespace:FolderSyns.Enums"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:views="clr-namespace:FolderSyns.Views"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:FolderSyns.ViewModels"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
            d:DataContext="{d:DesignInstance Type=viewModels:MainUserControlViewModel}"
             Height="330"
             Width="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction  Command="{Binding CloseCommand}" />
        </i:EventTrigger>

        <mvvm:InteractionRequestTrigger SourceObject="{Binding HistoryCommandNotificationRequest}">
            <mvvm:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <mvvm:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Setter Property="ShowInTaskbar" Value="False" />
                    </Style>
                </mvvm:PopupWindowAction.WindowStyle>
                <mvvm:PopupWindowAction.WindowContent>
                    <views:HistoryView />
                </mvvm:PopupWindowAction.WindowContent>
            </mvvm:PopupWindowAction>
        </mvvm:InteractionRequestTrigger>

        <mvvm:InteractionRequestTrigger SourceObject="{Binding SettingsCommandNotificationRequest}">
            <mvvm:PopupWindowAction IsModal="True">
                <mvvm:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="Width" Value="530" />
                        <Setter Property="Height" Value="180" />
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Setter Property="ShowInTaskbar" Value="False" />
                    </Style>
                </mvvm:PopupWindowAction.WindowStyle>
                <mvvm:PopupWindowAction.WindowContent>
                    <views:SettingsView />
                </mvvm:PopupWindowAction.WindowContent>
            </mvvm:PopupWindowAction>
        </mvvm:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid Grid.IsSharedSizeScope="True" Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Style="{StaticResource FirstColumnDefinitionStyle}" />
            <ColumnDefinition Style="{StaticResource LastColumnDefinitionStyle}" />
            <ColumnDefinition Style="{StaticResource FirstColumnDefinitionStyle}" />
            <ColumnDefinition Style="{StaticResource LastColumnDefinitionStyle}" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Style="{StaticResource RowDefinitionStyle}" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Style="{StaticResource RowDefinitionStyle}" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource FirstColumnDefinitionStyle}" />
                <ColumnDefinition Style="{StaticResource LastColumnDefinitionStyle}" />
                <ColumnDefinition Style="{StaticResource FirstColumnDefinitionStyle}" />
                <ColumnDefinition Style="{StaticResource LastColumnDefinitionStyle}" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource RowDefinitionStyle}" />
                <RowDefinition Style="{StaticResource RowDefinitionStyle}" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Укажите папку:" Grid.Column="0" Grid.ColumnSpan="2" />
            <TextBox Text="{Binding SourcePath, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="0" />
            <Button x:Name="SourceOpenButton"
                    Grid.Row="1" Grid.Column="1"
                    Style="{StaticResource FolderButtonImageStyle}"
                    Command="{Binding Path=OpenFolderCommand}" CommandParameter="{x:Static enums:FolderType.SourceFolder}" />

            <TextBlock Grid.Row="0" Text="Укажите папку:" Grid.Column="2" Grid.ColumnSpan="2"  />
            <TextBox Text="{Binding TargetPath, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="2" />
            <Button x:Name="TargetOpenButton"
                    Grid.Row="1" Grid.Column="3"
                    Style="{StaticResource FolderButtonImageStyle}"
                    Command="{Binding Path=OpenFolderCommand}" CommandParameter="{x:Static enums:FolderType.TargetFolder}" />
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <CheckBox Grid.Column="0" IsChecked="{Binding IsAllCopySource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxCopyImageStyle}" />
            <CheckBox Grid.Column="1" IsChecked="{Binding IsAllDeleteSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxDeleteImageStyle}" />
        </Grid>

        <Grid Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <CheckBox Grid.Column="0" IsChecked="{Binding IsAllCopyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxCopyImageStyle}" />
            <CheckBox Grid.Column="1" IsChecked="{Binding IsAllDeleteTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxDeleteImageStyle}" />
        </Grid>
        
        <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding InSourceFileNotExistTarget}" SelectionMode="Single" IsSelected="False">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsCopy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource CheckBoxCopyImageStyle}" EditingElementStyle="{StaticResource CheckBoxCopyImageStyle}" />
                <DataGridCheckBoxColumn Binding="{Binding IsDelete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource CheckBoxDeleteImageStyle}" EditingElementStyle="{StaticResource CheckBoxDeleteImageStyle}" />
                <DataGridTextColumn Binding="{Binding FileName}" />
            </DataGrid.Columns>
        </DataGrid>
        
        <DataGrid Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" ItemsSource="{Binding InTargetFileNotExistSource}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsCopy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource CheckBoxCopyImageStyle}" EditingElementStyle = "{StaticResource CheckBoxCopyImageStyle}"  />
                <DataGridCheckBoxColumn Binding="{Binding IsDelete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource CheckBoxDeleteImageStyle}" EditingElementStyle="{StaticResource CheckBoxDeleteImageStyle}" />
                <DataGridTextColumn Binding="{Binding FileName}" />
            </DataGrid.Columns>
        </DataGrid>
        
        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource RowDefinitionStyle}" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="{Binding Process}" />
            <TextBlock Grid.Column="1" Text="{Binding CurrentLog}" />
            <Button x:Name="RefreshButton" Grid.Column="3" Style="{StaticResource UpdateButtonImageStyle}" Command="{Binding Path= RefreshCommand}" />
            <Button x:Name="StartButton" Grid.Column="4" Style="{StaticResource StartButtonImageStyle}" Command="{Binding Path= StartCommand}" />
            <Button x:Name="SettingsButton" Grid.Column="5" Style="{StaticResource SettingsButtonImageStyle}" Command="{Binding Path= SettingCommand}" />
            <Button x:Name="HistoryButton" Grid.Column="6" Style="{StaticResource HistoryButtonImageStyle}" Command="{Binding Path= HistoryCommand}" />
            <Button x:Name="CloseButton" Grid.Column="7" Style="{StaticResource ExitButtonImageStyle}" Command="{Binding Path= CloseCommand}" />
        </Grid>
    </Grid>
</Window>
